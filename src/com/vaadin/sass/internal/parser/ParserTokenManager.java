/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package com.vaadin.sass.internal.parser;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Map;
import java.util.UUID;
import org.w3c.css.sac.ConditionFactory;
import org.w3c.css.sac.Condition;
import org.w3c.css.sac.SelectorFactory;
import org.w3c.css.sac.SelectorList;
import org.w3c.css.sac.Selector;
import org.w3c.css.sac.SimpleSelector;
import org.w3c.css.sac.DocumentHandler;
import org.w3c.css.sac.InputSource;
import org.w3c.css.sac.ErrorHandler;
import org.w3c.css.sac.CSSException;
import org.w3c.css.sac.CSSParseException;
import org.w3c.css.sac.Locator;
import org.w3c.css.sac.LexicalUnit;
import org.w3c.flute.parser.selectors.SelectorFactoryImpl;
import org.w3c.flute.parser.selectors.ConditionFactoryImpl;
import org.w3c.flute.util.Encoding;
import com.vaadin.sass.internal.handler.*;
import com.vaadin.sass.internal.tree.*;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 33;
         }
         if ((active0 & 0x8000000000L) != 0L)
            return 517;
         if ((active0 & 0x10000L) != 0L)
            return 79;
         if ((active0 & 0x200800L) != 0L)
            return 42;
         if ((active0 & 0x8000044L) != 0L)
            return 3;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0xf80000003fL) != 0L)
            return 166;
         if ((active0 & 0x38000000000000L) != 0L || (active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 74;
            return 518;
         }
         if ((active0 & 0x200000000L) != 0L)
            return 519;
         return -1;
      case 1:
         if ((active0 & 0x50000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 518;
         }
         if ((active1 & 0x8L) != 0L)
            return 178;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0xf800000037L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 1;
            return 520;
         }
         if ((active0 & 0x40L) != 0L)
            return 1;
         if ((active0 & 0x28000000000000L) != 0L || (active1 & 0x80L) != 0L)
            return 518;
         return -1;
      case 2:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 2;
            return 177;
         }
         if ((active1 & 0x1L) != 0L)
            return 520;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0xf800000036L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 2;
            return 520;
         }
         if ((active0 & 0x50000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 518;
         }
         return -1;
      case 3:
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 3;
            return 518;
         }
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 3;
            return 176;
         }
         if ((active0 & 0xdf80000000000000L) != 0L || (active1 & 0xf800000036L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 3;
            return 520;
         }
         if ((active0 & 0x2000000000000000L) != 0L)
            return 520;
         if ((active0 & 0x40000000000000L) != 0L)
            return 518;
         return -1;
      case 4:
         if ((active0 & 0x8f80000000000000L) != 0L || (active1 & 0xb800000034L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 4;
            return 520;
         }
         if ((active0 & 0x5000000000000000L) != 0L || (active1 & 0x4000000002L) != 0L)
            return 520;
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
            return 518;
         }
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 4;
            return 175;
         }
         return -1;
      case 5:
         if ((active0 & 0x700000000000000L) != 0L || (active1 & 0xa800000034L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 5;
            return 520;
         }
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 5;
            return 518;
         }
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 5;
            return 174;
         }
         if ((active0 & 0x8880000000000000L) != 0L || (active1 & 0x1000000000L) != 0L)
            return 520;
         return -1;
      case 6:
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x800000004L) != 0L)
            return 520;
         if ((active0 & 0x300000000000000L) != 0L || (active1 & 0xa000000038L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 6;
            return 520;
         }
         if ((active0 & 0x10000000000000L) != 0L)
            return 518;
         return -1;
      case 7:
         if ((active0 & 0x100000000000000L) != 0L || (active1 & 0x2000000020L) != 0L)
            return 520;
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x8000000018L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 7;
            return 520;
         }
         return -1;
      case 8:
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x10L) != 0L)
            return 520;
         if ((active1 & 0x8000000008L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 8;
            return 520;
         }
         return -1;
      case 9:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 9;
            return 520;
         }
         if ((active1 & 0x8000000000L) != 0L)
            return 520;
         return -1;
      case 10:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 10;
            return 520;
         }
         return -1;
      case 11:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 11;
            return 520;
         }
         return -1;
      case 12:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 12;
            return 520;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_0(0x8000000000L, 0x0L);
      case 36:
         return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);
      case 37:
         return jjStopAtPos(0, 31);
      case 38:
         jjmatchedKind = 32;
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 34);
      case 41:
         return jjStopAtPos(0, 35);
      case 42:
         jjmatchedKind = 30;
         return jjMoveStringLiteralDfa1_0(0x20000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 20);
      case 44:
         return jjStopAtPos(0, 22);
      case 45:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 33, 519);
      case 47:
         jjmatchedKind = 27;
         return jjMoveStringLiteralDfa1_0(0x44L, 0x0L);
      case 58:
         return jjStopAtPos(0, 40);
      case 59:
         return jjStopAtPos(0, 23);
      case 60:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 61:
         jjmatchedKind = 19;
         return jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L);
      case 62:
         return jjStopAtPos(0, 24);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xff80000000000000L, 0xf80000003fL);
      case 91:
         return jjStopAtPos(0, 28);
      case 93:
         return jjStopAtPos(0, 29);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x40000000000000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x80L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x18000000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 12);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x2000004000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 13);
      case 126:
         jjmatchedKind = 25;
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      default :
         return jjMoveNfa_0(4, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
      case 38:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStopAtPos(1, 38);
         break;
      case 42:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(1, 6, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L, active1, 0x8L);
      case 47:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 61:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         else if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(1, 15);
         else if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(1, 16);
         else if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(1, 17);
         else if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(1, 18);
         else if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 36);
         else if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 39);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000000020L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000000000000L, active1, 0x6L);
      case 70:
      case 102:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(1, 71, 518);
         return jjMoveStringLiteralDfa2_0(active0, 0x2200000000000000L, active1, 0x8000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0x800000001L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000000L, active1, 0x1000000000L);
      case 78:
      case 110:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 53, 518);
         break;
      case 79:
      case 111:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 51, 518);
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x440000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x9000000000000000L, active1, 0L);
      case 124:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 37);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L, active1, 0L);
      case 62:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(2, 11);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x5000000000000000L, active1, 0x4000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0xc00000000000000L, active1, 0x1000000000L);
      case 70:
      case 102:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(2, 64, 520);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000000L, active1, 0x2000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000008L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x2040000000000000L, active1, 0x8000000020L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L, active1, 0x10L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(3, 10);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x4100000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 54, 518);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0x8000000020L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000000000L, active1, 0x8L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800000010L);
      case 82:
      case 114:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 61, 520);
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0x4L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(4, 65, 520);
         else if ((active1 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 102, 520);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x4L);
      case 72:
      case 104:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 62, 520);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0x1000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x8100000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 60, 520);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x10L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8000000020L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0xc10000000000000L, active1, 0L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x8000000008L);
      case 65:
      case 97:
         if ((active1 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 100, 520);
         break;
      case 69:
      case 101:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 63, 520);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x20L);
      case 71:
      case 103:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 59, 520);
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 55, 520);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x10L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000000L, active1, 0x800000000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x2000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(6, 66, 520);
         return jjMoveStringLiteralDfa7_0(active0, 0x100000000000000L, active1, 0x8L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x2000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x8000000000L);
      case 72:
      case 104:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 52, 518);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 58, 520);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x20L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x10L);
      case 84:
      case 116:
         if ((active1 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(6, 99, 520);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x8000000000L);
      case 69:
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 56, 520);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000000L, active1, 0x8L);
      case 84:
      case 116:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(7, 69, 520);
         else if ((active1 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 101, 520);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x8000000008L);
      case 78:
      case 110:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 57, 520);
         break;
      case 83:
      case 115:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(8, 68, 520);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 103, 520);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa10_0(active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(8, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 77:
      case 109:
         return jjMoveStringLiteralDfa11_0(active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(9, 0L, active1);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(9, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, 0L, active1);
      return 11;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa12_0(active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(10, 0L, active1);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(10, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, 0L, active1);
      return 12;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa13_0(active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(11, 0L, active1);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(11, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, 0L, active1);
      return 13;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(13, 67, 520);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 517;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 520:
               case 113:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 166:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 112;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 217;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 205;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 189;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 174:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAddStates(0, 81);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(82, 101);
                  else if (curChar == 45)
                     jjAddStates(102, 103);
                  else if (curChar == 33)
                     jjCheckNAddStates(104, 107);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(100, 101);
                  else if (curChar == 36)
                     jjCheckNAddStates(108, 111);
                  else if (curChar == 39)
                     jjCheckNAddStates(112, 115);
                  else if (curChar == 34)
                     jjCheckNAddStates(116, 119);
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 517:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(251, 260);
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(243, 250);
                  break;
               case 518:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  else if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(231, 232);
                  else if (curChar == 40)
                  {
                     if (kind > 120)
                        kind = 120;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  break;
               case 175:
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 33:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  else if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(231, 232);
                  else if (curChar == 40)
                  {
                     if (kind > 120)
                        kind = 120;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  break;
               case 176:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 519:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(124, 128);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 325);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(319, 321);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 318);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(314, 316);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 313);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(305, 308);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(301, 304);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(298, 300);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 297);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(290, 293);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(287, 289);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(284, 286);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(281, 283);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 280);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(275, 277);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(272, 274);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 271);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(267, 268);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(266);
                  }
                  break;
               case 177:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 79:
                  if (curChar == 45)
                     jjCheckNAdd(80);
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffff7fffffffffffL & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 6:
                  if (curChar == 36)
                     jjCheckNAddStates(129, 132);
                  break;
               case 7:
                  if (curChar == 45)
                     jjCheckNAdd(8);
                  break;
               case 9:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 12:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(136, 140);
                  break;
               case 14:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(141, 148);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(149, 152);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(153, 157);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(158, 163);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(164, 170);
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(171, 175);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(176, 183);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(184, 187);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(193, 198);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(199, 205);
                  break;
               case 28:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 40:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 43:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 34)
                     jjCheckNAddStates(116, 119);
                  break;
               case 45:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 46:
                  if (curChar == 34 && kind > 73)
                     kind = 73;
                  break;
               case 48:
                  if (curChar == 12)
                     jjCheckNAddStates(116, 119);
                  break;
               case 50:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(206, 211);
                  break;
               case 52:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(212, 220);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(221, 225);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(226, 231);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(232, 238);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(239, 246);
                  break;
               case 58:
                  if (curChar == 13)
                     jjCheckNAddStates(116, 119);
                  break;
               case 59:
                  if (curChar == 10)
                     jjCheckNAddStates(116, 119);
                  break;
               case 60:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 39)
                     jjCheckNAddStates(112, 115);
                  break;
               case 62:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 63:
                  if (curChar == 39 && kind > 73)
                     kind = 73;
                  break;
               case 65:
                  if (curChar == 12)
                     jjCheckNAddStates(112, 115);
                  break;
               case 67:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(247, 252);
                  break;
               case 69:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(253, 261);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(262, 266);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(267, 272);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(273, 279);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(280, 287);
                  break;
               case 75:
                  if (curChar == 13)
                     jjCheckNAddStates(112, 115);
                  break;
               case 76:
                  if (curChar == 10)
                     jjCheckNAddStates(112, 115);
                  break;
               case 77:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 36)
                     jjCheckNAddStates(108, 111);
                  break;
               case 81:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 83:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(288, 291);
                  break;
               case 85:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(292, 298);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(299, 301);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(302, 305);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(306, 310);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(311, 316);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(317, 320);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(321, 327);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(328, 330);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(331, 334);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(335, 339);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(340, 345);
                  break;
               case 99:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(100, 101);
                  break;
               case 100:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 102:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(346, 349);
                  break;
               case 104:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(350, 356);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(357, 359);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(360, 363);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(364, 368);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(369, 374);
                  break;
               case 111:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 115:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(375, 378);
                  break;
               case 117:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(379, 385);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(386, 388);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(389, 392);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(393, 397);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(398, 403);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(404, 407);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(408, 414);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(415, 417);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(418, 421);
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(422, 426);
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(427, 432);
                  break;
               case 132:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(433, 434);
                  break;
               case 133:
                  if (curChar == 40 && kind > 117)
                     kind = 117;
                  break;
               case 140:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(435, 436);
                  break;
               case 141:
                  if (curChar == 40 && kind > 118)
                     kind = 118;
                  break;
               case 148:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(437, 438);
                  break;
               case 149:
                  if (curChar == 40 && kind > 119)
                     kind = 119;
                  break;
               case 179:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 188:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 190:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 199:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 206:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 215:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 218:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 222:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(439, 442);
                  break;
               case 224:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(443, 449);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(450, 452);
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(453, 456);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(457, 461);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(462, 467);
                  break;
               case 230:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 231:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(231, 232);
                  break;
               case 232:
                  if (curChar == 40 && kind > 120)
                     kind = 120;
                  break;
               case 234:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(468, 472);
                  break;
               case 236:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(473, 480);
                  break;
               case 238:
               case 452:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(481, 484);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(485, 489);
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(490, 495);
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(496, 502);
                  break;
               case 242:
                  if (curChar == 33)
                     jjCheckNAddStates(104, 107);
                  break;
               case 243:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(243, 250);
                  break;
               case 251:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(251, 260);
                  break;
               case 261:
                  if (curChar == 45)
                     jjAddStates(102, 103);
                  break;
               case 265:
                  if (curChar == 46)
                     jjCheckNAddStates(82, 101);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(266);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(267, 268);
                  break;
               case 268:
                  if (curChar == 37 && kind > 79)
                     kind = 79;
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 271);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(272, 274);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(275, 277);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 280);
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(281, 283);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(284, 286);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(287, 289);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(290, 293);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(294, 297);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(298, 300);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(301, 304);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(305, 308);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 313);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(314, 316);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 318);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(319, 321);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 325);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(124, 128);
                  break;
               case 327:
                  if (curChar == 45)
                     jjCheckNAdd(328);
                  break;
               case 329:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 331:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(503, 506);
                  break;
               case 333:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(507, 513);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(514, 516);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(517, 520);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(521, 525);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(526, 531);
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(532, 535);
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(536, 542);
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(543, 545);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(546, 549);
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(550, 554);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(555, 560);
                  break;
               case 348:
                  if (curChar == 40)
                     jjCheckNAddStates(561, 566);
                  break;
               case 349:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 350:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(350, 351);
                  break;
               case 351:
                  if (curChar == 41 && kind > 77)
                     kind = 77;
                  break;
               case 353:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(571, 575);
                  break;
               case 355:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(576, 583);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(584, 587);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(588, 592);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(593, 598);
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(599, 605);
                  break;
               case 361:
                  if (curChar == 39)
                     jjCheckNAddStates(606, 609);
                  break;
               case 362:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(606, 609);
                  break;
               case 363:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(350, 351);
                  break;
               case 365:
                  if (curChar == 12)
                     jjCheckNAddStates(606, 609);
                  break;
               case 367:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(606, 609);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(610, 615);
                  break;
               case 369:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(606, 609);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(616, 624);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(625, 629);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(630, 635);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(636, 642);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(643, 650);
                  break;
               case 375:
                  if (curChar == 13)
                     jjCheckNAddStates(606, 609);
                  break;
               case 376:
                  if (curChar == 10)
                     jjCheckNAddStates(606, 609);
                  break;
               case 377:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 34)
                     jjCheckNAddStates(651, 654);
                  break;
               case 379:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(651, 654);
                  break;
               case 380:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(350, 351);
                  break;
               case 382:
                  if (curChar == 12)
                     jjCheckNAddStates(651, 654);
                  break;
               case 384:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(651, 654);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(655, 660);
                  break;
               case 386:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(651, 654);
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(661, 669);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(670, 674);
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(675, 680);
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(681, 687);
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(688, 695);
                  break;
               case 392:
                  if (curChar == 13)
                     jjCheckNAddStates(651, 654);
                  break;
               case 393:
                  if (curChar == 10)
                     jjCheckNAddStates(651, 654);
                  break;
               case 394:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(696, 702);
                  break;
               case 398:
                  if (curChar == 43)
                     jjAddStates(703, 704);
                  break;
               case 399:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 400:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(705, 708);
                  break;
               case 401:
                  if (curChar == 63 && kind > 116)
                     kind = 116;
                  break;
               case 402:
               case 417:
               case 421:
               case 424:
               case 427:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAdd(401);
                  break;
               case 403:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddTwoStates(401, 402);
                  break;
               case 404:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(709, 711);
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjAddStates(712, 717);
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(409);
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L && kind > 116)
                     kind = 116;
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAdd(401);
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 420:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddTwoStates(401, 421);
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 423:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(718, 720);
                  break;
               case 425:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddTwoStates(401, 424);
                  break;
               case 426:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(721, 724);
                  break;
               case 428:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddTwoStates(401, 427);
                  break;
               case 429:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(725, 727);
                  break;
               case 430:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(432, 438);
                  break;
               case 432:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 433:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(728, 731);
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAdd(409);
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddTwoStates(409, 435);
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(732, 734);
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(735, 739);
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(432);
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(439, 432);
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(740, 742);
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(743, 746);
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(747, 750);
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(751, 757);
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(758, 760);
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(761, 764);
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(765, 769);
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(770, 775);
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(776, 780);
                  break;
               case 451:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(781, 788);
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(789, 793);
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(794, 799);
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(800, 806);
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(0, 81);
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(457);
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(458, 459);
                  break;
               case 459:
                  if (curChar == 46)
                     jjCheckNAdd(266);
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(460, 268);
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(461, 462);
                  break;
               case 462:
                  if (curChar == 46)
                     jjCheckNAdd(267);
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(463, 271);
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(464, 465);
                  break;
               case 465:
                  if (curChar == 46)
                     jjCheckNAdd(269);
                  break;
               case 466:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(466, 274);
                  break;
               case 467:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(467, 468);
                  break;
               case 468:
                  if (curChar == 46)
                     jjCheckNAdd(272);
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(469, 277);
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(470, 471);
                  break;
               case 471:
                  if (curChar == 46)
                     jjCheckNAdd(275);
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(472, 280);
                  break;
               case 473:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(473, 474);
                  break;
               case 474:
                  if (curChar == 46)
                     jjCheckNAdd(278);
                  break;
               case 475:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(475, 283);
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(476, 477);
                  break;
               case 477:
                  if (curChar == 46)
                     jjCheckNAdd(281);
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(478, 286);
                  break;
               case 479:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(479, 480);
                  break;
               case 480:
                  if (curChar == 46)
                     jjCheckNAdd(284);
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(481, 289);
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(482, 483);
                  break;
               case 483:
                  if (curChar == 46)
                     jjCheckNAdd(287);
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(484, 293);
                  break;
               case 485:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(485, 486);
                  break;
               case 486:
                  if (curChar == 46)
                     jjCheckNAdd(290);
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(487, 297);
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(488, 489);
                  break;
               case 489:
                  if (curChar == 46)
                     jjCheckNAdd(294);
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(490, 300);
                  break;
               case 491:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(491, 492);
                  break;
               case 492:
                  if (curChar == 46)
                     jjCheckNAdd(298);
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(493, 304);
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(494, 495);
                  break;
               case 495:
                  if (curChar == 46)
                     jjCheckNAdd(301);
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(496, 308);
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(497, 498);
                  break;
               case 498:
                  if (curChar == 46)
                     jjCheckNAdd(305);
                  break;
               case 499:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(499, 313);
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(500, 501);
                  break;
               case 501:
                  if (curChar == 46)
                     jjCheckNAdd(309);
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(502, 316);
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(503, 504);
                  break;
               case 504:
                  if (curChar == 46)
                     jjCheckNAdd(314);
                  break;
               case 505:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(505, 318);
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(506, 507);
                  break;
               case 507:
                  if (curChar == 46)
                     jjCheckNAdd(317);
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(508, 321);
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(509, 510);
                  break;
               case 510:
                  if (curChar == 46)
                     jjCheckNAdd(319);
                  break;
               case 511:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(511, 325);
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(512, 513);
                  break;
               case 513:
                  if (curChar == 46)
                     jjCheckNAdd(322);
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(807, 811);
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(515, 516);
                  break;
               case 516:
                  if (curChar == 46)
                     jjCheckNAdd(326);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 520:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 166:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 125);
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 174:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddStates(812, 817);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(818, 821);
                  else if (curChar == 64)
                     jjAddStates(822, 826);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(827, 829);
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 64)
                     jjAddStates(830, 833);
                  break;
               case 517:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 178:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  else if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 518:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(222, 223);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(234, 235);
                  break;
               case 175:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(222, 223);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(234, 235);
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 176:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 42:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 177:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 79:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                     jjCheckNAddTwoStates(81, 82);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(83, 93);
                  break;
               case 2:
                  if (kind > 5)
                     kind = 5;
                  break;
               case 5:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 10:
                  if (curChar == 125 && kind > 41)
                     kind = 41;
                  break;
               case 11:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 12:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(136, 140);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(141, 148);
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(149, 152);
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(153, 157);
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(158, 163);
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(164, 170);
                  break;
               case 21:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(12, 22);
                  break;
               case 22:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(171, 175);
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(176, 183);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(184, 187);
                  break;
               case 25:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(188, 192);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(193, 198);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(199, 205);
                  break;
               case 29:
                  if ((0x4000000040000L & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 30:
               case 35:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(29);
                  break;
               case 31:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 34:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 41:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 45:
               case 50:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 47:
                  if (curChar == 92)
                     jjAddStates(834, 837);
                  break;
               case 49:
                  if (curChar == 92)
                     jjAddStates(838, 839);
                  break;
               case 51:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(206, 211);
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(212, 220);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(221, 225);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(226, 231);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(232, 238);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(239, 246);
                  break;
               case 62:
               case 67:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 64:
                  if (curChar == 92)
                     jjAddStates(840, 843);
                  break;
               case 66:
                  if (curChar == 92)
                     jjAddStates(844, 845);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(247, 252);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(253, 261);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(262, 266);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(267, 272);
                  break;
               case 73:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(273, 279);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(280, 287);
                  break;
               case 80:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 82:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(83, 84);
                  break;
               case 83:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 84:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(288, 291);
                  break;
               case 86:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(292, 298);
                  break;
               case 87:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(299, 301);
                  break;
               case 88:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(302, 305);
                  break;
               case 89:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(306, 310);
                  break;
               case 90:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(311, 316);
                  break;
               case 92:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(83, 93);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(317, 320);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(321, 327);
                  break;
               case 95:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(328, 330);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(331, 334);
                  break;
               case 97:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(335, 339);
                  break;
               case 98:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddStates(340, 345);
                  break;
               case 100:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 101:
                  if (curChar == 92)
                     jjAddStates(846, 847);
                  break;
               case 102:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 103:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(346, 349);
                  break;
               case 105:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(350, 356);
                  break;
               case 106:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(357, 359);
                  break;
               case 107:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(360, 363);
                  break;
               case 108:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(364, 368);
                  break;
               case 109:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddStates(369, 374);
                  break;
               case 110:
                  if (curChar == 64)
                     jjAddStates(830, 833);
                  break;
               case 112:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 113:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 114:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 115:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 116:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(375, 378);
                  break;
               case 118:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(379, 385);
                  break;
               case 119:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(386, 388);
                  break;
               case 120:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(389, 392);
                  break;
               case 121:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(393, 397);
                  break;
               case 122:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(398, 403);
                  break;
               case 124:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(115, 125);
                  break;
               case 125:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(404, 407);
                  break;
               case 126:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(408, 414);
                  break;
               case 127:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(415, 417);
                  break;
               case 128:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(418, 421);
                  break;
               case 129:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(422, 426);
                  break;
               case 130:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddStates(427, 432);
                  break;
               case 131:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(433, 434);
                  break;
               case 134:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 135:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(435, 436);
                  break;
               case 142:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 143:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(437, 438);
                  break;
               case 150:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 151:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 64)
                     jjAddStates(822, 826);
                  break;
               case 158:
                  if ((0x8000000080000L & l) != 0L && kind > 104)
                     kind = 104;
                  break;
               case 159:
               case 167:
               case 180:
               case 191:
               case 207:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(158);
                  break;
               case 160:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 168:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 181:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 189:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 192:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 208:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 216:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 220:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 221:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(222, 223);
                  break;
               case 222:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 223:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(439, 442);
                  break;
               case 225:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(443, 449);
                  break;
               case 226:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(450, 452);
                  break;
               case 227:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(453, 456);
                  break;
               case 228:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(457, 461);
                  break;
               case 229:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(462, 467);
                  break;
               case 230:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 233:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(234, 235);
                  break;
               case 234:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(468, 472);
                  break;
               case 237:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(473, 480);
                  break;
               case 238:
               case 452:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(481, 484);
                  break;
               case 239:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(485, 489);
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(490, 495);
                  break;
               case 241:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(496, 502);
                  break;
               case 244:
                  if ((0x10000000100000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 245:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 252:
                  if ((0x10000000100000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 253:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 262:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 263:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 264:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(812, 817);
                  break;
               case 270:
                  if ((0x10000000100000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 271:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 273:
                  if ((0x200000002000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 274:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 276:
                  if ((0x200000002000L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 277:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 279:
                  if ((0x800000008L & l) != 0L && kind > 83)
                     kind = 83;
                  break;
               case 280:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 282:
                  if ((0x400000004000L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 283:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 285:
                  if ((0x100000001000000L & l) != 0L && kind > 85)
                     kind = 85;
                  break;
               case 286:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 288:
                  if ((0x200000002000L & l) != 0L && kind > 86)
                     kind = 86;
                  break;
               case 289:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 291:
                  if ((0x200000002000L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 292:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 295:
                  if ((0x200000002000L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 296:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 299:
                  if ((0x100000001000000L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 300:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 302:
                  if ((0x8000000080L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 303:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 306:
                  if ((0x1000000010L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 307:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 310:
                  if ((0x1000000010L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 311:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 315:
                  if ((0x8000000080000L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 316:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 318:
                  if ((0x8000000080000L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 320:
                  if ((0x400000004000000L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 321:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 323:
                  if ((0x400000004000000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 324:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 328:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 329:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 330:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(331, 332);
                  break;
               case 331:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 332:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(503, 506);
                  break;
               case 334:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(507, 513);
                  break;
               case 335:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(514, 516);
                  break;
               case 336:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(517, 520);
                  break;
               case 337:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(521, 525);
                  break;
               case 338:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(526, 531);
                  break;
               case 340:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(331, 341);
                  break;
               case 341:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(532, 535);
                  break;
               case 342:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(536, 542);
                  break;
               case 343:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(543, 545);
                  break;
               case 344:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(546, 549);
                  break;
               case 345:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(550, 554);
                  break;
               case 346:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddStates(555, 560);
                  break;
               case 347:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(827, 829);
                  break;
               case 349:
               case 353:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 352:
                  if (curChar == 92)
                     jjAddStates(848, 849);
                  break;
               case 354:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(571, 575);
                  break;
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(576, 583);
                  break;
               case 357:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(584, 587);
                  break;
               case 358:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(588, 592);
                  break;
               case 359:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(593, 598);
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(599, 605);
                  break;
               case 362:
               case 367:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(606, 609);
                  break;
               case 364:
                  if (curChar == 92)
                     jjAddStates(850, 853);
                  break;
               case 366:
                  if (curChar == 92)
                     jjAddStates(854, 855);
                  break;
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(610, 615);
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(616, 624);
                  break;
               case 371:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(625, 629);
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(630, 635);
                  break;
               case 373:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(636, 642);
                  break;
               case 374:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(643, 650);
                  break;
               case 379:
               case 384:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(651, 654);
                  break;
               case 381:
                  if (curChar == 92)
                     jjAddStates(856, 859);
                  break;
               case 383:
                  if (curChar == 92)
                     jjAddStates(860, 861);
                  break;
               case 385:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(655, 660);
                  break;
               case 387:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(661, 669);
                  break;
               case 388:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(670, 674);
                  break;
               case 389:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(675, 680);
                  break;
               case 390:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(681, 687);
                  break;
               case 391:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(688, 695);
                  break;
               case 396:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 397:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 405:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjAddStates(712, 717);
                  break;
               case 406:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 407:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 408:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(409);
                  break;
               case 409:
                  if ((0x7e0000007eL & l) != 0L && kind > 116)
                     kind = 116;
                  break;
               case 410:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 411:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 412:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 413:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 414:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 415:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 416:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 418:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 419:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 431:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(432, 438);
                  break;
               case 433:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 434:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(728, 731);
                  break;
               case 435:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAdd(409);
                  break;
               case 436:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddTwoStates(409, 435);
                  break;
               case 437:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAddStates(732, 734);
                  break;
               case 438:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(735, 739);
                  break;
               case 439:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(432);
                  break;
               case 440:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(439, 432);
                  break;
               case 441:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(740, 742);
                  break;
               case 442:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(743, 746);
                  break;
               case 443:
                  if (curChar == 92)
                     jjCheckNAddStates(818, 821);
                  break;
               case 444:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(747, 750);
                  break;
               case 445:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(751, 757);
                  break;
               case 446:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(758, 760);
                  break;
               case 447:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(761, 764);
                  break;
               case 448:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(765, 769);
                  break;
               case 449:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddStates(770, 775);
                  break;
               case 450:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(776, 780);
                  break;
               case 451:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(781, 788);
                  break;
               case 453:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(789, 793);
                  break;
               case 454:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(794, 799);
                  break;
               case 455:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(800, 806);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 520:
               case 113:
               case 115:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 166:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 174:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(812, 817);
                  break;
               case 518:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 175:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 33:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     jjCheckNAddTwoStates(220, 221);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 176:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 177:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 79:
               case 81:
               case 83:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 9:
               case 12:
               case 20:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(133, 135);
                  break;
               case 45:
               case 50:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 62:
               case 67:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 100:
               case 102:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 220:
               case 222:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAddTwoStates(220, 221);
                  break;
               case 230:
               case 234:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 329:
               case 331:
               case 339:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjCheckNAddTwoStates(329, 330);
                  break;
               case 349:
               case 353:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 362:
               case 367:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(606, 609);
                  break;
               case 379:
               case 384:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(651, 654);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 517 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_3(0x100L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_3(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         break;
      default :
         return 2;
   }
   return 2;
}
private int jjMoveStringLiteralDfa0_1()
{
   return jjMoveNfa_1(0, 0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if ((0x2400L & l) != 0L && kind > 4)
                     kind = 4;
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 3)
                     kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   457, 458, 459, 460, 461, 462, 268, 463, 464, 465, 271, 466, 467, 468, 274, 469, 
   470, 471, 277, 472, 473, 474, 280, 475, 476, 477, 283, 478, 479, 480, 286, 481, 
   482, 483, 289, 484, 485, 486, 293, 487, 488, 489, 297, 490, 491, 492, 300, 493, 
   494, 495, 304, 496, 497, 498, 308, 499, 500, 501, 313, 502, 503, 504, 316, 505, 
   506, 507, 318, 508, 509, 510, 321, 511, 512, 513, 325, 514, 515, 516, 327, 328, 
   339, 340, 266, 267, 269, 272, 275, 278, 281, 284, 287, 290, 294, 298, 301, 305, 
   309, 314, 317, 319, 322, 326, 262, 263, 243, 250, 251, 260, 79, 80, 91, 92, 
   62, 63, 64, 66, 45, 46, 47, 49, 230, 231, 232, 233, 326, 327, 328, 339, 
   340, 7, 8, 20, 21, 9, 10, 11, 9, 14, 10, 11, 15, 9, 16, 14, 
   10, 11, 17, 18, 19, 9, 14, 10, 11, 9, 16, 14, 10, 11, 9, 16, 
   14, 10, 11, 17, 9, 16, 14, 10, 11, 17, 18, 14, 9, 10, 11, 23, 
   24, 14, 9, 10, 11, 25, 26, 27, 14, 9, 10, 11, 24, 14, 9, 10, 
   11, 24, 14, 9, 10, 11, 25, 24, 14, 9, 10, 11, 25, 26, 45, 52, 
   46, 47, 49, 53, 45, 54, 52, 46, 47, 49, 55, 56, 57, 45, 52, 46, 
   47, 49, 45, 54, 52, 46, 47, 49, 45, 54, 52, 46, 47, 49, 55, 45, 
   54, 52, 46, 47, 49, 55, 56, 62, 69, 63, 64, 66, 70, 62, 71, 69, 
   63, 64, 66, 72, 73, 74, 62, 69, 63, 64, 66, 62, 71, 69, 63, 64, 
   66, 62, 71, 69, 63, 64, 66, 72, 62, 71, 69, 63, 64, 66, 72, 73, 
   81, 85, 82, 86, 81, 87, 85, 82, 88, 89, 90, 81, 85, 82, 81, 87, 
   85, 82, 81, 87, 85, 82, 88, 81, 87, 85, 82, 88, 89, 85, 81, 82, 
   94, 95, 85, 81, 82, 96, 97, 98, 85, 81, 82, 95, 85, 81, 82, 95, 
   85, 81, 82, 96, 95, 85, 81, 82, 96, 97, 100, 104, 101, 105, 100, 106, 
   104, 101, 107, 108, 109, 100, 104, 101, 100, 106, 104, 101, 100, 106, 104, 101, 
   107, 100, 106, 104, 101, 107, 108, 113, 117, 114, 118, 113, 119, 117, 114, 120, 
   121, 122, 113, 117, 114, 113, 119, 117, 114, 113, 119, 117, 114, 120, 113, 119, 
   117, 114, 120, 121, 117, 113, 114, 126, 127, 117, 113, 114, 128, 129, 130, 117, 
   113, 114, 127, 117, 113, 114, 127, 117, 113, 114, 128, 127, 117, 113, 114, 128, 
   129, 132, 133, 140, 141, 148, 149, 220, 224, 221, 225, 220, 226, 224, 221, 227, 
   228, 229, 220, 224, 221, 220, 226, 224, 221, 220, 226, 224, 221, 227, 220, 226, 
   224, 221, 227, 228, 230, 232, 233, 236, 237, 230, 238, 232, 233, 236, 239, 240, 
   241, 230, 232, 233, 236, 230, 238, 232, 233, 236, 230, 238, 232, 233, 236, 239, 
   230, 238, 232, 233, 236, 239, 240, 329, 333, 330, 334, 329, 335, 333, 330, 336, 
   337, 338, 329, 333, 330, 329, 335, 333, 330, 329, 335, 333, 330, 336, 329, 335, 
   333, 330, 336, 337, 333, 329, 330, 342, 343, 333, 329, 330, 344, 345, 346, 333, 
   329, 330, 343, 333, 329, 330, 343, 333, 329, 330, 344, 343, 333, 329, 330, 344, 
   345, 349, 361, 378, 351, 352, 395, 349, 350, 351, 352, 349, 351, 352, 355, 356, 
   349, 357, 351, 352, 355, 358, 359, 360, 349, 351, 352, 355, 349, 357, 351, 352, 
   355, 349, 357, 351, 352, 355, 358, 349, 357, 351, 352, 355, 358, 359, 362, 363, 
   364, 366, 362, 369, 363, 364, 366, 370, 362, 371, 369, 363, 364, 366, 372, 373, 
   374, 362, 369, 363, 364, 366, 362, 371, 369, 363, 364, 366, 362, 371, 369, 363, 
   364, 366, 372, 362, 371, 369, 363, 364, 366, 372, 373, 379, 380, 381, 383, 379, 
   386, 380, 381, 383, 387, 379, 388, 386, 380, 381, 383, 389, 390, 391, 379, 386, 
   380, 381, 383, 379, 388, 386, 380, 381, 383, 379, 388, 386, 380, 381, 383, 389, 
   379, 388, 386, 380, 381, 383, 389, 390, 349, 361, 378, 350, 351, 352, 395, 399, 
   405, 401, 402, 403, 404, 401, 402, 403, 406, 410, 414, 418, 422, 426, 401, 424, 
   425, 401, 427, 428, 429, 401, 427, 428, 409, 435, 436, 437, 409, 435, 436, 439, 
   432, 440, 441, 442, 439, 432, 440, 439, 432, 440, 441, 224, 220, 221, 445, 446, 
   224, 220, 221, 447, 448, 449, 224, 220, 221, 446, 224, 220, 221, 446, 224, 220, 
   221, 447, 446, 224, 220, 221, 447, 448, 230, 232, 233, 236, 451, 452, 230, 232, 
   233, 236, 453, 454, 455, 452, 230, 232, 233, 236, 452, 230, 232, 233, 236, 453, 
   452, 230, 232, 233, 236, 453, 454, 514, 327, 328, 339, 340, 220, 230, 231, 232, 
   233, 221, 222, 444, 234, 450, 166, 179, 190, 206, 218, 397, 398, 430, 111, 112, 
   123, 124, 48, 58, 60, 59, 50, 51, 65, 75, 77, 76, 67, 68, 102, 103, 
   353, 354, 365, 375, 377, 376, 367, 368, 382, 392, 394, 393, 384, 385, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, "\74\41\55\55", 
"\55\55\76", "\173", "\175", "\174\75", "\136\75", "\44\75", "\52\75", "\176\75", "\75", 
"\53", "\55", "\54", "\73", "\76", "\176", "\74", "\57", "\133", "\135", "\52", 
"\45", "\46", "\56", "\50", "\51", "\75\75", "\174\174", "\46\46", "\41\75", "\72", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_SINGLE_LINE_COMMENT",
   "IN_FORMAL_COMMENT",
   "IN_MULTI_LINE_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, -1, 0, 2, 3, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfff807fffffffc03L, 0x3f007ffffffefffL, 
};
static final long[] jjtoSkip = {
   0x190L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x80L, 0x0L, 
};
static final long[] jjtoMore = {
   0x26cL, 0x0L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[517];
private final int[] jjstateSet = new int[1034];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public ParserTokenManager(CharStream stream){
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 517; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 121)
         {
            jjmatchedKind = 121;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 9)
         {
            jjmatchedKind = 9;
         }
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 9)
         {
            jjmatchedKind = 9;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 5 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                   input_stream.backup(1);
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          image = Parser.SPACE;
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
